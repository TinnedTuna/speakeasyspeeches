from flask import render_template, flash, redirect, url_for, abort, g
from flask.ext.login import login_user, current_user, login_required, logout_user
from forms import LoginForm, CreatePage, BlogPost, UserForm
from app import db, app, lm, models, bcrypt
import datetime

@lm.user_loader
def user_loder(id):
    return models.User.query.get(int(id))

def menu(active_id=None):
    pages = models.Page.query.order_by(models.Page.id)
    menu = []
    for page in pages:
        menu_item = { 'menu_display' : page.title, \
                'menu_url' : url_for('view_page', id=page.id)}
        if active_id is not None:
            menu_item["active"] = active_id == page.id
        menu.append(menu_item)
    contact_page = {
            'menu_display' : 'Contact',\
            'menu_url' : url_for('contact')}
    blog_page = {
            'menu_display' : 'Blog', \
            'menu_url' : url_for('show_blog')}
    if (active_id == len(menu) + 1):
        contact_page["active"] = True
    if (active_id == len(menu) + 2):
        blog_page["active"] = True
    menu.append(contact_page)
    menu.append(blog_page)
    return menu
                
def blog_menu_location():
    return len(models.Page.query.all()) + 2

@app.errorhandler(404)
def handle404(error):
    return render_template("404.html", menu=menu())

@app.errorhandler(401)
def handle401(error):
    return render_template("401.html", menu=menu())
